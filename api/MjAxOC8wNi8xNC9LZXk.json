{"title":"常用快捷键记录","date":"2018-06-14T08:44:22.000Z","date_formatted":{"ll":"Jun 14, 2018","L":"06/14/2018","MM-DD":"06-14"},"link":"2018/06/14/Key","tags":["快捷键"],"categories":["笔记"],"updated":"2022-03-14T09:23:19.514Z","content":"<h5 id=\"idea\">IDEA<a title=\"#idea\" href=\"#idea\"></a></h5>\n<ul>\n<li><code>iter</code>  自动补全foreach()</li>\n<li><code>itar</code>  自动补全for()</li>\n<li><code>Ctrl + Alt + M</code>  选中要封装的代码,就会自动将该段代码封装成一个方法</li>\n<li><code>Ctrl + D</code>  将光标所在行代码复制到下一行</li>\n<li><code>Ctrl + Y</code>  删除光标所在行代码</li>\n<li><code>Ctrl + Shift + /</code>  注释选中的代码块</li>\n<li><code>Ctrl + /</code>  注释选中的代码块</li>\n<li><code>Alt + Insert</code>  如果光标在项目的文件夹上，可以在当前文件夹中添加类,包等</li>\n<li><code>Alt + Insert</code>   如果光标在类中（也就是是在项目的代码部分）,可以将构造函数,get,set等方法添加到该类中</li>\n<li><code>Shift + F6</code>  统一修改命名</li>\n<li><code>Shift + Tab</code>  选中的代码块向前缩进</li>\n<li><code>Ctrl + Q</code>  查看方法的使用说明</li>\n<li><code>长按Ctrl</code>  鼠标放到方法上可以简要查看方法的使用方法</li>\n<li><code>Ctrl + Alt + F</code>  将变量提升为全局变量</li>\n<li><code>Ctrl + Alt + V</code>  将变量提升为局部变量</li>\n</ul>\n<h5 id=\"sublime-text\">Sublime Text<a title=\"#sublime-text\" href=\"#sublime-text\"></a></h5>\n<ul>\n<li><code>Alt</code> 显示顶端导航栏</li>\n<li><code>Ctrl + K + B</code> 显示/隐藏左侧目录导航栏</li>\n</ul>\n<h5 id=\"visual-studio-code\">Visual Studio Code<a title=\"#visual-studio-code\" href=\"#visual-studio-code\"></a></h5>\n<ul>\n<li><code>Ctrl + B</code>  显示/隐藏左侧目录导航栏</li>\n</ul>\n<h5 id=\"vim\">Vim<a title=\"#vim\" href=\"#vim\"></a></h5>\n<ul>\n<li><code>:new 文件名</code>  新建文件</li>\n<li><code>:e 文件名</code>  打开文件</li>\n<li><code>:w 文件名</code>  保存文件</li>\n<li><code>:wq</code>  强制性写入文件并退出，即使文件没有被更改也强制写入，同时也会更新文件的修改时间</li>\n<li><code>:x</code>  写入文件并退出，文件没有被更改时，不会被强制写入，也不会更新文件的修改时间，文件被更改时，才会更新文件的修改时间</li>\n</ul>\n<h5 id=\"android-studio\">Android Studio<a title=\"#android-studio\" href=\"#android-studio\"></a></h5>\n<ul>\n<li><code>Ctrl + O</code>  重写方法</li>\n</ul>\n<h5 id=\"git\">Git<a title=\"#git\" href=\"#git\"></a></h5>\n<ul>\n<li><code>git status</code>  查看项目状态，会提示目前项目中修改过的信息</li>\n<li><code>git diff</code>  查看项目中文件更改的内容</li>\n<li><code>git checkout 文件路径</code>  撤销项目中文件修改的内容（针对该文件还未执行 git add 命令被添加过）</li>\n<li><code>git reset HEAD 文件路径</code>  取消添加文件，取消添加文件之后，可以通过 checkout 命令撤销修改</li>\n<li><code>git log</code>  查看提交记录</li>\n<li><code>git log 提交记录id -1</code>  查看特定一行的提交记录</li>\n<li><code>git log 提交记录id -1 -p</code>  查看特定的提交记录对应的所修改的内容</li>\n</ul>\n<h5 id=\"网络\">网络<a title=\"#网络\" href=\"#网络\"></a></h5>\n<ul>\n<li>查看连接的 wifi 密码\n<ul>\n<li><code>cd/</code></li>\n<li><code>netsh</code></li>\n<li><code>wlan show profile</code></li>\n<li><code>wlan show profile</code> + 目标 wifi 名称 + <code>key=clear</code></li>\n</ul>\n</li>\n</ul>\n","prev":{"title":"调试","link":"2018/09/20/调试"},"next":{"title":"Crash处理流程","link":"2018/04/11/Crash处理流程"},"plink":"https://zhoufeichi.com/2018/06/14/Key/","reward":true}