{"title":"1.TwoSum","date":"2019-07-28T13:57:33.000Z","date_formatted":{"ll":"Jul 28, 2019","L":"07/28/2019","MM-DD":"07-28"},"link":"2019/07/28/1-TwoSum","tags":["LeetCode"],"categories":["算法"],"updated":"2022-03-16T10:26:27.506Z","content":"<h5 id=\"description\">Description<a title=\"#description\" href=\"#description\"></a></h5>\n<p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p>\n<p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>\n<p>Example:</p>\n<p>Given nums = [2, 7, 11, 15], target = 9,<br>\nBecause nums[0] + nums[1] = 2 + 7 = 9,<br>\nreturn [0, 1].</p>\n<h5 id=\"code\">Code<a title=\"#code\" href=\"#code\"></a></h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span>[] twoSum(<span class=\"type\">int</span>[] nums, <span class=\"type\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] index = &#123;-<span class=\"number\">1</span>, -<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        HashMap&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;(nums.length);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">other</span> <span class=\"operator\">=</span> target - nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(other) &amp;&amp; map.get(other) != i) &#123;</span><br><span class=\"line\">                index[<span class=\"number\">0</span>] = i &lt; map.get(other) ? i : map.get(other);</span><br><span class=\"line\">                index[<span class=\"number\">1</span>] = i &gt; map.get(other) ? i : map.get(other);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>  index;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.put(nums[i], i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"406.Queue Reconstruction by Height","link":"2020/02/10/406-Queue Reconstruction by Height"},"next":{"title":"Linux基础","link":"2018/12/24/Linux基础"},"plink":"https://zhoufeichi.com/2019/07/28/1-TwoSum/","reward":true,"reading_time":"149 words in 1 min"}