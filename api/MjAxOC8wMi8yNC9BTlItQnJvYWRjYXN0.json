{"title":"ANR-Broadcast","date":"2018-02-24T02:23:33.000Z","date_formatted":{"ll":"Feb 24, 2018","L":"02/24/2018","MM-DD":"02-24"},"link":"2018/02/24/ANR-Broadcast","tags":["Android","四大组件"],"categories":["笔记"],"updated":"2020-04-04T05:59:18.673Z","content":"<p>   串行广播需要考虑超时的情况，接收者是串行处理的，前一个 receiver 处理慢，会影响后一个 receiver 。对于并行广播则是通过一个循环一次性向所有的receiver分发广播事件，所以不存在彼此影响的问题，则没有广播超时。<br>\n串行广播通常有两种超时情况：</p>\n<ul>\n<li>某个广播总处理时间 &gt; 2 * receiver 总个数 * mTimeoutPeriod</li>\n<li>某个 receiver 的执行时间超过 mTimeoutPeriod</li>\n</ul>\n<p>   BroadcastQueue.BroadcastHandler 收到 BROADCAST_TIMEOUT_MSG 消息时会触发 ANR 事件。广播队列有两种：</p>\n<ul>\n<li>foreground 队列：对于前台广播，超时设置为 BROADCAST_FG_TIMEOUT = 10s</li>\n<li>background 队列：对于后台广播，超时设置为 BROADCAST_BG_TIMEOUT = 60s</li>\n</ul>\n<h4 id=\"埋炸弹\">埋炸弹<a title=\"#埋炸弹\" href=\"#埋炸弹\"></a></h4>\n<p>  processNextBroadcast 来处理广播时，首先处理并行广播,再处理当前有序广播,最后获取并处理下条有序广播。在这个过程中，在处理有序广播时，首先会获取该广播的所有接受者，然后就需要判断此时该广播的总时间是否超时，如果超时那么需要结束这条广播。如果没有超时，那么往下走就是进入处理广播消息的过程，处理完广播消息，系统需要获取下条有序广播，那么在获取下条有序广播的时候就有一个埋炸弹的过程，埋炸弹就是通过<code>setBroadcastTimeoutLocked(timeoutTime)</code>给该广播设置一个时间戳，以便后面来处理广播消息时判断是否已经超时。这需要在<code>setBroadcastTimeoutLocked(...)</code>方法中设置定时广播 BROADCAST_TIMEOUT_MSG，即当前往后推 mTimeoutPeriod 时间广播还没处理完毕，则进入广播超时流程。</p>\n<h4 id=\"拆炸弹\">拆炸弹<a title=\"#拆炸弹\" href=\"#拆炸弹\"></a></h4>\n<p>  正如前面说的在 processNextBroadcast 方法内，广播如果没有超时，那么会调用方法<code>performReceiveLocked(...)</code>来处理广播，执行完该方法之后，就会进行拆除炸弹的操作。拆除炸弹是通过<code>cancelBroadcastTimeoutLocked()</code>来移除广播超时消息 BROADCAST_TIMEOUT_MSG 。</p>\n<h4 id=\"引爆炸弹\">引爆炸弹<a title=\"#引爆炸弹\" href=\"#引爆炸弹\"></a></h4>\n<p>   引爆炸弹的过程发生在 <code>broadcastTimeoutLocked()</code>方法中，首先判断是否有下列几种情况：</p>\n<ul>\n<li>mOrderedBroadcasts 已处理完成，则不会发生 anr</li>\n<li>正在执行 dexopt，则不会 anr</li>\n<li>系统还没有进入 ready 状态(mProcessesReady=false)，则不会anr</li>\n<li>如果当前正在执行的 receiver 没有超时，则重新设置广播超时，不会 anr</li>\n</ul>\n<p>  如果不是上面的几种情况，那么会通过<code>mHandler.post(new AppNotResponding(app, anrMessage))</code>发送 AppNotResponding 的消息，此时会进入 ANR 处理流程。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppNotResponding</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 进入ANR处理流程</span></span><br><span class=\"line\">        mService.appNotResponding(mApp, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">false</span>, mAnnotation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"ANR-ContentProvider","link":"2018/02/24/ANR-ContentProvider"},"next":{"title":"ANR-Service","link":"2018/02/13/ANR-Service"},"plink":"https://zhoufeichi.com/2018/02/24/ANR-Broadcast/","reward":true}